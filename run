#!/bin/bash

if [ ! -d .venv ]; then
    python3 -m venv .venv
    source .venv/bin/activate
    pip3 install -r requirements.txt
    pip3 install git+https://github.com/hiive/mlrose.git
else
    source .venv/bin/activate
fi

combined_contents=""
combined_file="logs/results.out"

rm -rf results logs figures $combined_contents
mkdir results logs figures

declare -a pids=()

cleanup() {
    echo "===========================KILL==================================="
    echo "Received Keyboard Interrupt. Cleaning up..."

    for pid in "${pids[@]}"; do
        kill -s SIGKILL "$pid" 2> /dev/null
        if [ $? -eq 0 ]; then
            echo "Killed subprocess with PID $pid."
        fi
    done
    
    exit 1
}

trap cleanup SIGINT

# Define the range of experiments and algorithms
experiment_range=(1 2 3)
algorithms=("rhc" "sa" "ga" "mimic")
i=0
# Loop over experiments and algorithms
for experiment in "${experiment_range[@]}"; do
    for algorithm in "${algorithms[@]}"; do
        # Run the Python script with the current experiment and algorithm
        python3 assignment_pt1.py -e "$experiment" -a "$algorithm" > "./logs/experiment${experiment}_${algorithm}.log" & 
        pid=$!
        pids+=("$pid")
        ((i++))
    done
done

wait

# Concatenate log files in numerical order
# Concatenate log files in numerical order
count=0
for file in $(ls -v logs/experiment*.log); do
    combined_contents+=$(cat "$file")
    ((count++))
    
    # Check if the count is a multiple of 4
    if ((count % 4 == 0)); then
        combined_contents+="\n=====================================================================\n"  # Add divider after each file
    fi
    combined_contents+='\n'
done

rm -rf logs/experiment*.log 
echo -e "$combined_contents" > $combined_file

